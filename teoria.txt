# Una tienda de ropa necesita que en su tienda virtual se clasifiquen sus prendas por tipo , es decir camisas , pantalones , zapatos ,etc , necesitan que desarrolles un proyecto el cual solo con la imagen reflejada de la prenda pueda clasificarla en su respectivo tipo

# Regresion vs Clasificacion , el ejercicio anterior era de regresion por que su salida retornaba un numero es decir los calculos de celsius a farenheit retornaba la cifra en dato numerico farenheit , a diferencia clasificacion es como un metodo switch que retornara la entrada en las diferentes categorias o casos 

# Para que la red neuronal permita recibir informacion como una imagen ella hace lo siguiente la imagen la recibe en blanco y negro donde cada cuadrito de la imagen px le asigna un valor de 0 a 255 donde 0 es totalmente negro y 255 para totalmente blanco , la imagen toma cada  pixel lo diferencia segun su color , le asigna un valor entre esta longitud y cada pixel lo agrega a una neurona distinta a la capa de entrada , nosotros reduciremos las imnagenes a 28x28 para que este proceso sea menos tedioso 28x28 tendremos 784 pixeles accediendo a 784 neuronas de la red

# Crearemos una red con 784 neuronas de entrada y 10 neuronas de salida para la clasificacion , el tipo de red neuronal recomendada para este caso es la red neuronal convolucional que se utiliza mucho en la clasificacion de imagenes

# En este caso igual vamos a usar la red neuronal densa para trabajar mejor los conceptos aprendidos con esta red neuronal

# Capas Ocultas , se usan para agregarle mas neuronas a la red es decir pueda realizar mejores calculos y cuenta con mayores variables como peso de conexion y sesgo de conexion para realizar funciones lineales

# Funcion de activacion , es una gran herramienta que su logica es la siguiente para numeros mayores a 0 mantiene su valor pero para numero negativos menores que 0 los convierte automaticamente en 0 , ejemplo si recibe 15 su valor va a seguir siendo 15 , pero si recibe -15 su valor cambiara a 0 , esta funcionalidad es crucial para que la red neuronal pueda realizar otro tipos de funciones diferentes a las lineales

# La normalizacion de datos en una red neuronal , hacer que todas las entradas sean numeros entre 0 y 1  eso ayuda  mucho para acelerar el entrenamiento y mejorar los resultados

# Red Neuronal Convolucional , el clasificador de imagenes funcionando con una red neuronal tipo densa lo que va a tratar de hacer es aprenderse en cada cuadrito de pixel separado su valor numerico respecto al tono de color al hacer esto va a comparar las imagenes reedimensionadas 28x28 que ya tiene y respecto a ello va determinar el porcentaje de prediccion , la red neurona convolucional si va a analisar la imagen completa y hasta determinara sus ejes 

# Nuronas Simples y Neuronas Complejas, las nueronas simples lo que hacen es detallar pixel por pixel de una imagen y ellas identifican y se activan con ejes o lineas de la pequeña parte que cumpla con un patron entrenado , es decir si los ejes no cumplen el patron estipulado no va a reconocerlos , a diferencia de las neuronas simples las neuronas complejas recogen toda la informacion de las neuronas simples y por partes o agrupaciones de cuadros captados por las neuronas simples agrupan informacion en procesos mas completos , es decir neuronas simples identifica caracteristicas mas pequeñas y las neuronas complejas agrupa la informacion pequeña de la simple y lo convierte en informacion mas completa , se activan con los ejes pero no les importa la posicion que puedan tener

# Capa de convolucion y Capa de agrupacion , Extraccion de caracteristicas ,
# capa de agrupacion reducir el tamaño de la imagen y resaltar las caracteristicas mas importantes , con la capa de convulcion extrae patrones , ejes ,figuras , formas y objetos despues de qie la capa de agrupacion trabaje , entre mas capas de convolucion y de agrupacion hallan podremos extraer patrones , caracteristicas e identificar con mejor precision los ejes en una imagen 

# Aumento de datos , Data Augmentation , basado en el set de datos que ya tenemos generar nuevas imagenes con diversas transformaciones de manera que nuestro set quede con imagenes mas variables , podemos agregar rotaciones, cambios de posicion de tamaño , etc , esto nos ayuda a que la red tenga mas variedad y sea mas robusta

# Dropout , lo que hace es aleatoriamente apagar algunas neuronas de manera que las que queden encendidas en la red cargen con mas peso haciendo esto la red mas funcional y eficaz 

# Como preparar e previsualizar los parametros que necesite una red neuronal segun los requerimientos pedidos para la aplicacion

# 1. Datos de entrenamiento, primero para desarrollar correctamente una red y su estructura necesitamos considerar su entrenamiento , machine learnig para que la maquina pueda mejorar y desarrollar en la mejor condicion posible su aprendizaje , para ello los inputs o informacion que vamos a suministrarle a la maquina tienen suma importancia por que esta es parte fundamental para que la red tenga un resultado exitoso.

# 2. Arquitectura Hiperparametros, teniendo en cuenta el tipo de datos que recibe la red y obvio el tipo de informacion que necesitamos que devuelva, consideramos que tipo de red neuronal es la mas adecuada para recibir , procesar , entrenar , aprender y retornar la informacion correctamente , definir su arquitectura e hiperparametros que vamos a usar , red densa , red convolucional , otro tipo , cuantas capas voy a usar , cuantas neuronas en cada capa , voy a usar tecnicas adicionales 

# 3. Exportacion , necesitamos saber como podemos exportar nuestro modelo a un formato en que podamos poner en un sitio web

# 4. Diseño Web, crear la pagina HTML con sus estilos para que sea funcional con nuestro modelo

# 5. Publicar pagina , para poder ver nuestro proyecto final en cualquier dispositivo

Para ariqutectura de hiperparametros vamos a usar tres modelos con aumento de datos y tres modelos sin aumentos de datos , modelos de las diferentes redes neuronales que vamos a estar haciendo para aplicar el entrenamiento y el machine learning